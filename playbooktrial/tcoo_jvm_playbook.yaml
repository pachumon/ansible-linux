#===================================================================================#
# this playbook checks for specific error text in log and based on the content
# it stops and starts a JVM server on websphere
# INPUT PARAMS
# host_name: host name of the execution server
# tcoo_user: the user account under which the playbook automation will execute
# file_path: the path to verify the specific log filepath
# file_name: the log file name to check content
# error_text: the exact error text to be verified in log file
# callback_enabled: this defines if the callback invocation is enabled
# callback_endpoint: the amelia or any specific callback endpoint that needs to be invoked
#===================================================================================#
---
- name: Verify JVM logs and restart service
  hosts: "{{ host_name }}"
  gather_facts: true
  become: true
  become_user: "{{ tcoo_user }}"

  tasks:
    - name: Verify user context and validate params
      debug:
        msg:
          - "The playbook is running as User : {{ ansible_env.USER }} on Host : {{ ansible_hostname }}"
          - "below are the params in the execution context"
          - "host_name: {{ (host_name is defined) | ternary (host_name,'not defined') }}"
          - "file_path: {{ (file_path is defined) | ternary (file_path,'not defined') }}"
          - "file_name: {{ (file_name is defined) | ternary (file_name,'not defined') }}"
          - "error_text: {{ (error_text is defined) | ternary (error_text,'not defined') }}"
          - "callback_endpoint: {{ (callback_endpoint is defined) | ternary (callback_endpoint,'not defined') }}"
      failed_when:
        - "host_name|bool or file_path|bool or file_name|bool or error_text|bool 
          or callback_endpoint|bool or tcoo_user|bool"

- name: verify file exists and check error content
  import_playbook: verify_file_check_content_playbook.yaml

- name: stop and start jvm server if error content exists
  when: grep_result.rc == 0
  import_playbook: restart_jvm_playbook.yaml

- name: invoke a url endpoint as call back on completion of the job
  when: callback_enabled|bool
  import_playbook: url_callback_playbook.yaml
#ansible-playbook ./playbooktrial/tcoo_jvm_playbook.yaml -e "host_name=localhost tcoo_user=adminuser file_path=/home/adminuser/sampledir file_name=serverlogs.log error_text=error callback_endpoint=https://swapi.dev/api/people/1"
